@model Reddit.ViewModels.SubReddit.EditVM

<div class="modal edit-modal" id="editSubreddit">
    <a href="#" class="modal-overlay edit-modal-close" aria-label="Close"></a>
    <div class="modal-container">
        <div class="modal-header">
            <a href="#" class="btn btn-clear float-right edit-modal-close" aria-label="Close"></a>
            <div class="modal-title h5">@(Model.Id > 0 ? "Edit" : "New") subreddit</div>
        </div>
        <div class="modal-body">
            <div class="content">
                @using (Ajax.BeginForm("Edit", "SubReddit", new AjaxOptions
                {
                    HttpMethod = "POST",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "edit-container",
                    OnSuccess = "editErrors"
                }, new { id = "edit-subreddit-form" }))
                {
                    if (Model.Id == 0)
                    { Model.UserId = Reddit.Models.AuthManager.LoggedUser.Id; }
                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.UserId)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, new { @class = "d-inline-block form-label" })
                        @Html.ValidationMessageFor(model => model.Name, null, new { @class = "text-error float-right" })
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-input", placeholder = "Name" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, new { @class = "d-inline-block form-label" })
                        @Html.ValidationMessageFor(model => model.Description, null, new { @class = "text-error float-right" })
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-input", placeholder = "Description" })
                    </div>
                    <div class="form-group">
                        <label class="form-label">Community type</label>
                        <label class="form-radio">
                            <input type="radio" name="community type" checked>
                            <i class="form-icon"></i> Public
                        </label>
                        <label class="form-radio">
                            <input type="radio" name="community type">
                            <i class="form-icon"></i> Restricted
                        </label>
                        <label class="form-radio">
                            <input type="radio" name="community type">
                            <i class="form-icon"></i> Private
                        </label>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Theme, new { @class = "d-inline-block form-label" })
                        @Html.ValidationMessageFor(model => model.Theme, null, new { @class = "text-error float-right" })
                        @Html.TextBoxFor(model => model.Theme, new { @class = "form-input", placeholder = "Theme" })
                    </div>        
                }
            </div>
        </div>
        <div class="modal-footer">
            <p class="float-left">Be careful with what you're @(Model.Id > 0 ? "editing" : "creating")!</p>
            <button class="btn btn-primary" form="edit-subreddit-form" type="submit">@(Model.Id == 0 ? "create" : "save")</button>
        </div>
    </div>
</div>