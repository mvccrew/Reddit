@model Reddit.ViewModels.Home.RegisterVM

<div class="modal" id="registerModal">
    <a href="#close" class="modal-overlay" aria-label="Close"></a>
    <div class="modal-container">
        <div class="modal-header">
            <a href="#close" class="btn btn-clear float-right" aria-label="Close"></a>
            <div class="modal-title h5">Sign up</div>
        </div>
        <div class="modal-body">
            <div class="content">
                @using (Ajax.BeginForm("Register", "Home", new AjaxOptions
                {
                    HttpMethod = "POST",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "register-container",
                    OnSuccess = "checkRegisterForErrors"
                }, new { id = "register-form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <p class="text-center">@Html.ValidationMessage("RegistrationFailed", new { @class = "text-error" })</p>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, new { @class = "d-inline-block form-label" })
                        @Html.ValidationMessageFor(model => model.Username, null, new { @class = "text-error float-right" })
                        @Html.TextBoxFor(model => model.Username, new { @class = "form-input", placeholder = "Username" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, new { @class = "d-inline-block form-label" })
                        @Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-error float-right" })
                        @Html.PasswordFor(model => model.Password, new { @class = "form-input", placeholder = "Password" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.RetypePassword, new { @class = "d-inline-block form-label" })
                        @Html.ValidationMessageFor(model => model.RetypePassword, null, new { @class = "text-error float-right" })
                        @Html.PasswordFor(model => model.RetypePassword, new { @class = "form-input", placeholder = "Retype your password" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, new { @class = "d-inline-block form-label" })
                        @Html.ValidationMessageFor(model => model.FirstName, null, new { @class = "text-error float-right" })
                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-input", placeholder = "First name" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, new { @class = "d-inline-block form-label" })
                        @Html.ValidationMessageFor(model => model.LastName, null, new { @class = "text-error float-right" })
                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-input", placeholder = "Last name" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, new { @class = "d-inline-block form-label" })
                        @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-error float-right" })
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-input", placeholder = "Email" })
                    </div>
                }
            </div>
        </div>
        <div class="modal-footer">
            <p class="float-left">We're happy to have you as a member!</p>
            <button class="btn btn-primary" form="register-form" type="submit">sign up</button>
        </div>
    </div>
</div>
