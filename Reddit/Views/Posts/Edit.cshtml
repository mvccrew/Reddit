@model Reddit.ViewModels.Posts.EditVM

@{
    ViewBag.Title = "PostsEdit";
}

<section>
    <h1>Edit post</h1>


    @using (Html.BeginForm("Edit", "Posts", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        { Model.UserId = Reddit.Models.AuthManager.LoggedUser.Id; }
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.SubRedditId)
        @Html.HiddenFor(Model => Model.PostTypeId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "d-inline-block form-label" })
            @Html.ValidationMessageFor(model => model.Title, null, new { @class = "text-error float-right" })
            @Html.TextBoxFor(model => model.Title, new { @class = "form-input", placeholder = "Title" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, new { @class = "d-inline-block form-label" })
            @Html.ValidationMessageFor(model => model.Content, null, new { @class = "text-error float-right" })
            @Html.TextBoxFor(model => model.Content, new { @class = "form-input", placeholder = "Content" })
        </div>
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" />
            @if (Model.SubRedditId != 0)
            {
                <a class="btn btn-secondary" href="@Url.Action("Index", "Posts", new { SubRedditId = Model.SubRedditId })">Cancel</a>
            }
            else
            {
                <a class="btn btn-secondary" href="@Url.Action("Index", "Home")">Cancel</a>
            }
        </div>
    }
</section>
