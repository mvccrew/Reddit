@model Reddit.ViewModels.Users.IndexVM
@{
    ViewBag.Title = "UsersIndex";
}

<h1>Users</h1>
<a style="text-decoration: none; float:right" href="@Url.Action("Edit", "Users")"><b>Create new</b></a>
<form class="form-horizontal" action="/Users/Index" method="get">
    <div class="form-group text-center">
        <div class="col-3 col-mx-auto">
            @Html.LabelFor(model => model.Filter.Username, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.Filter.Username, new { @class = "form-input" })
        </div>
        <div class="col-3 col-mx-auto">
            @Html.LabelFor(model => model.Filter.FirstName, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.Filter.FirstName, new { @class = "form-input" })
        </div>
        <div class="col-3 col-mx-auto">
            @Html.LabelFor(model => model.Filter.LastName, new { @class = "form-label" })
            @Html.TextBoxFor(model => model.Filter.LastName, new { @class = "form-input" })
        </div>
    </div>
    <input class="btn btn-primary" type="submit" value="Search" />
</form>

<table class="table">
    <tr>
        <th>Id</th>
        <th>Username</th>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Adminsitrator</th>
        <th colspan="2" style="border-bottom:none"></th>
    </tr>
    @foreach (var item in Model.Items)
    {
        <tr>
            <td>@item.Id</td>
            <td>@item.Username</td>
            <td>@item.FirstName</td>
            <td>@item.LastName</td>
            <td>@item.IsAdmin</td>
            <td colspan="2" style="border-bottom:none">
                <a class="btn btn-success" href="@Url.Action("Edit", "Users", new { Id = item.Id})">edit</a>
                <a style="margin-left: 10px;" class="btn btn-error" href="@Url.Action("Delete", "Users", new { Id = item.Id})">delete</a>
            </td>
        </tr>
    }
</table>
@{
    string pageLink = "?";
    for (int i = 0; i < this.Request.QueryString.Count; i++)
    {
        if (this.Request.QueryString.GetKey(i) != "Pager.Page")
        {
            pageLink += this.Request.QueryString.GetKey(i) + "=" + Url.Encode(this.Request.QueryString[i]) + "&";
        }
    }
}
<ul style="list-style-type:none;">
    @for (int i = 0; i < Model.Pager.PagesCount; i++)
    {
        <li style="float:left; margin:0 5px;">
            <a href="/@this.ViewContext.RouteData.Values["controller"]/@this.ViewContext.RouteData.Values["action"]@Html.Raw(pageLink)Pager.Page=@(i+1)" style="text-decoration:none; font-weight:@(Model.Pager.Page == (i+1) ? "bold" : "normal")">@(i + 1)</a>
        </li>
    }
</ul>
<script>
                        function ddlItemsPerpage_OnChange() {
                            @{
                                string itemsPerPageLink = "?";
                                for (int i = 0; i < this.Request.QueryString.Count; i++)
                                {
                                    if (!this.Request.QueryString.GetKey(i).StartsWith("Pager"))
                                    {
                                        itemsPerPageLink += this.Request.QueryString.GetKey(i) + "=" + Url.Encode(this.Request.QueryString[i]) + "&";
                                    }
                                }
                            }

                            var link = "/@this.ViewContext.RouteData.Values["controller"]/@this.ViewContext.RouteData.Values["action"]@Html.Raw(itemsPerPageLink)" + "Pager.ItemsPerPage=" + $("#ddlItemsPerpage").val();

                            window.location.href = link;
                        }
</script>
<select id="ddlItemsPerpage" onchange="ddlItemsPerpage_OnChange();">
    <option value="10" @(Model.Pager.ItemsPerPage == 10 ? "selected" : "")>10</option>
    <option value="50" @(Model.Pager.ItemsPerPage == 50 ? "selected" : "")>50</option>
    <option value="100" @(Model.Pager.ItemsPerPage == 100 ? "selected" : "")>100</option>
</select>